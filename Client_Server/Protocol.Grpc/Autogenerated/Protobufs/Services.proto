syntax = "proto3";

        import "google/protobuf/timestamp.proto";
        import "google/protobuf/empty.proto";
        import "Models.proto";
        import "PrimitiveMessages.proto";

        option csharp_namespace = "Protocol.Grpc.ProtoServices";
        package Protocol.Grpc;



                service Currency
                {

                            rpc Save(CurrencyModelMessage) returns (CurrencyModelMessage);
                        
                            rpc GetPage(Int32Int32ICurrencyFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (CurrencyModelListMessage);
                        
                            rpc GetReferences(Int32Int32ICurrencyFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (CurrencyReferenceListMessage);
                        
                            rpc Count(CurrencyFilterModelMessage) returns (UInt32Message);
                        
                            rpc Get(Int64Message) returns (CurrencyModelMessage);
                        
                            rpc Delete(Int64ListMessage) returns (BooleanMessage);
                                        }
            
                service Customer
                {

                            rpc Save(CustomerModelMessage) returns (CustomerModelMessage);
                        
                            rpc GetPage(Int32Int32ICustomerFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (CustomerModelListMessage);
                        
                            rpc GetReferences(Int32Int32ICustomerFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (CustomerReferenceListMessage);
                        
                            rpc Count(CustomerFilterModelMessage) returns (UInt32Message);
                        
                            rpc Get(Int64Message) returns (CustomerModelMessage);
                        
                            rpc Delete(Int64ListMessage) returns (BooleanMessage);
                                        }
            
                service Deposit
                {

                            rpc Save(DepositModelMessage) returns (DepositModelMessage);
                        
                            rpc GetPage(Int32Int32IDepositFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (DepositModelListMessage);
                        
                            rpc GetReferences(Int32Int32IDepositFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (DepositReferenceListMessage);
                        
                            rpc Count(DepositFilterModelMessage) returns (UInt32Message);
                        
                            rpc Get(Int64Message) returns (DepositModelMessage);
                        
                            rpc Delete(Int64ListMessage) returns (BooleanMessage);
                        
                            rpc ChangeStatus(IDepositReadOnlyModelUInt16CommunicationContractModelMessage) returns (DepositModelMessage);
                                        }
            
                service Employee
                {

                            rpc Save(EmployeeModelMessage) returns (EmployeeModelMessage);
                        
                            rpc GetPage(Int32Int32IEmployeeFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (EmployeeModelListMessage);
                        
                            rpc GetReferences(Int32Int32IEmployeeFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (EmployeeReferenceListMessage);
                        
                            rpc Count(EmployeeFilterModelMessage) returns (UInt32Message);
                        
                            rpc Get(Int64Message) returns (EmployeeModelMessage);
                        
                            rpc Delete(Int64ListMessage) returns (BooleanMessage);
                                        }
            
                service Good
                {

                            rpc Save(GoodModelMessage) returns (GoodModelMessage);
                        
                            rpc GetPage(Int32Int32IGoodFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (GoodModelListMessage);
                        
                            rpc GetReferences(Int32Int32IGoodFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (GoodReferenceListMessage);
                        
                            rpc Count(GoodFilterModelMessage) returns (UInt32Message);
                        
                            rpc Get(Int64Message) returns (GoodModelMessage);
                        
                            rpc Delete(Int64ListMessage) returns (BooleanMessage);
                                        }
            
                service IncomingOrder
                {

                            rpc Save(IncomingOrderModelMessage) returns (IncomingOrderModelMessage);
                        
                            rpc GetPage(Int32Int32IIncomingOrderFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (IncomingOrderModelListMessage);
                        
                            rpc GetReferences(Int32Int32IIncomingOrderFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (IncomingOrderReferenceListMessage);
                        
                            rpc Count(IncomingOrderFilterModelMessage) returns (UInt32Message);
                        
                            rpc Get(Int64Message) returns (IncomingOrderModelMessage);
                        
                            rpc Delete(Int64ListMessage) returns (BooleanMessage);
                        
                            rpc ChangeStatus(IIncomingOrderReadOnlyModelUInt16CommunicationContractModelMessage) returns (IncomingOrderModelMessage);
                                        }
            
                service IncomingPayment
                {

                            rpc Save(IncomingPaymentModelMessage) returns (IncomingPaymentModelMessage);
                        
                            rpc GetPage(Int32Int32IIncomingPaymentFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (IncomingPaymentModelListMessage);
                        
                            rpc GetReferences(Int32Int32IIncomingPaymentFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (IncomingPaymentReferenceListMessage);
                        
                            rpc Count(IncomingPaymentFilterModelMessage) returns (UInt32Message);
                        
                            rpc Get(Int64Message) returns (IncomingPaymentModelMessage);
                        
                            rpc Delete(Int64ListMessage) returns (BooleanMessage);
                        
                            rpc ChangeStatus(IIncomingPaymentReadOnlyModelUInt16CommunicationContractModelMessage) returns (IncomingPaymentModelMessage);
                                        }
            
                service OutgoingOrder
                {

                            rpc Save(OutgoingOrderModelMessage) returns (OutgoingOrderModelMessage);
                        
                            rpc GetPage(Int32Int32IOutgoingOrderFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (OutgoingOrderModelListMessage);
                        
                            rpc GetReferences(Int32Int32IOutgoingOrderFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (OutgoingOrderReferenceListMessage);
                        
                            rpc Count(OutgoingOrderFilterModelMessage) returns (UInt32Message);
                        
                            rpc Get(Int64Message) returns (OutgoingOrderModelMessage);
                        
                            rpc Delete(Int64ListMessage) returns (BooleanMessage);
                        
                            rpc ChangeStatus(IOutgoingOrderReadOnlyModelUInt16CommunicationContractModelMessage) returns (OutgoingOrderModelMessage);
                                        }
            
                service OutgoingPayment
                {

                            rpc Save(OutgoingPaymentModelMessage) returns (OutgoingPaymentModelMessage);
                        
                            rpc GetPage(Int32Int32IOutgoingPaymentFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (OutgoingPaymentModelListMessage);
                        
                            rpc GetReferences(Int32Int32IOutgoingPaymentFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (OutgoingPaymentReferenceListMessage);
                        
                            rpc Count(OutgoingPaymentFilterModelMessage) returns (UInt32Message);
                        
                            rpc Get(Int64Message) returns (OutgoingPaymentModelMessage);
                        
                            rpc Delete(Int64ListMessage) returns (BooleanMessage);
                        
                            rpc ChangeStatus(IOutgoingPaymentReadOnlyModelUInt16CommunicationContractModelMessage) returns (OutgoingPaymentModelMessage);
                                        }
            
                service StaffPaycheck
                {

                            rpc Save(StaffPaycheckModelMessage) returns (StaffPaycheckModelMessage);
                        
                            rpc GetPage(Int32Int32IStaffPaycheckFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (StaffPaycheckModelListMessage);
                        
                            rpc GetReferences(Int32Int32IStaffPaycheckFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (StaffPaycheckReferenceListMessage);
                        
                            rpc Count(StaffPaycheckFilterModelMessage) returns (UInt32Message);
                        
                            rpc Get(Int64Message) returns (StaffPaycheckModelMessage);
                        
                            rpc Delete(Int64ListMessage) returns (BooleanMessage);
                        
                            rpc ChangeStatus(IStaffPaycheckReadOnlyModelUInt16CommunicationContractModelMessage) returns (StaffPaycheckModelMessage);
                                        }
            
                service Supplier
                {

                            rpc Save(SupplierModelMessage) returns (SupplierModelMessage);
                        
                            rpc GetPage(Int32Int32ISupplierFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (SupplierModelListMessage);
                        
                            rpc GetReferences(Int32Int32ISupplierFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (SupplierReferenceListMessage);
                        
                            rpc Count(SupplierFilterModelMessage) returns (UInt32Message);
                        
                            rpc Get(Int64Message) returns (SupplierModelMessage);
                        
                            rpc Delete(Int64ListMessage) returns (BooleanMessage);
                                        }
            
                service User
                {

                            rpc Save(UserModelMessage) returns (UserModelMessage);
                        
                            rpc GetPage(Int32Int32IUserFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (UserModelListMessage);
                        
                            rpc GetReferences(Int32Int32IUserFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (UserReferenceListMessage);
                        
                            rpc Count(UserFilterModelMessage) returns (UInt32Message);
                        
                            rpc Get(Int64Message) returns (UserModelMessage);
                        
                            rpc Delete(Int64ListMessage) returns (BooleanMessage);
                                        }
            
                service Withdrawal
                {

                            rpc Save(WithdrawalModelMessage) returns (WithdrawalModelMessage);
                        
                            rpc GetPage(Int32Int32IWithdrawalFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (WithdrawalModelListMessage);
                        
                            rpc GetReferences(Int32Int32IWithdrawalFilterReadOnlyModelIEnumerableOfStringCommunicationContractModelMessage) returns (WithdrawalReferenceListMessage);
                        
                            rpc Count(WithdrawalFilterModelMessage) returns (UInt32Message);
                        
                            rpc Get(Int64Message) returns (WithdrawalModelMessage);
                        
                            rpc Delete(Int64ListMessage) returns (BooleanMessage);
                        
                            rpc ChangeStatus(IWithdrawalReadOnlyModelUInt16CommunicationContractModelMessage) returns (WithdrawalModelMessage);
                                        }
            
                service EmployeeCustomActions
                {

                            rpc GetByName(StringMessage) returns (EmployeeReferenceListMessage);
                        
                            rpc GetSameArrayAsync(EmployeeReferenceListMessage) returns (EmployeeReferenceListMessage);
                        
                            rpc GetReferrables(StringMessage) returns (EmployeeReferenceListMessage);
                        
                            rpc CreateManyEmployees(UInt32Message) returns (BooleanMessage);
                                        }
            
                service AccountActions
                {

                            rpc ChangePassword(ChangePasswordRequestModelMessage) returns (BooleanMessage);
                                        }
            
                service SessionActions
                {

                            rpc StartSession(StringStringCommunicationContractModelMessage) returns (StartSessionResponseModelMessage);
                        
                            rpc EndSession(StringMessage) returns (BooleanMessage);
                        
                            rpc VerifySession(VerifySessionRequestModelMessage) returns (UserModelMessage);
                        
                            rpc GetCurrentSessionPermissions(google.protobuf.Empty) returns (PermissionsModelMessage);
                                        }
            
                service SimpleActions
                {

                            rpc GetOneEmployee(google.protobuf.Empty) returns (EmployeeModelListMessage);
                        
                            rpc GetSeveralEmployees(UInt32Message) returns (EmployeeModelListMessage);
                        
                            rpc GetSorted(EmployeeModelListMessage) returns (EmployeeModelListMessage);
                        
                            rpc IsEvenCollection(StringListMessage) returns (BooleanMessage);
                        
                            rpc ThrowException(StringMessage) returns (BooleanMessage);
                        
                            rpc ReturnSameFilter(EmployeeModelMessage) returns (EmployeeModelMessage);
                        
                            rpc ReturnThreadId(google.protobuf.Empty) returns (UInt32Message);
                        
                            rpc GroupIntegers(Int32Int32CommunicationContractModelMessage) returns (Int32ListMessage);
                        
                            rpc MultiplyEmployees(IEmployeeReadOnlyModelInt32CommunicationContractModelMessage) returns (EmployeeModelListMessage);
                        
                            rpc CalculateEmployees(IEnumerableOfIEmployeeReadOnlyModelInt32CommunicationContractModelMessage) returns (Int32Message);
                        
                            rpc MaxOfValues(IEmployeeReadOnlyModelIListOfIEmployeeReadOnlyModelInt32Int32IEnumerableOfIEmployeeReadOnlyModelCommunicationContractModelMessage) returns (Int32Message);
                                        }
            
                service TestMethodContainer
                {

                            rpc Method(UInt32Message) returns (UInt32Message);
                        
                            rpc HoldDbContext(Int32Message) returns (BooleanMessage);
                                        }
            
                service StockEntries
                {

                            rpc GetStockInfo(StockEntryFilterModelMessage) returns (StockEntryModelListMessage);
                                        }
            
                service Finances
                {

                            rpc GetCashBalance(google.protobuf.Empty) returns (CashEntryModelListMessage);
                        
                            rpc GetUnsettledIncomingOrders(google.protobuf.Empty) returns (UnsettledOrderModelListMessage);
                        
                            rpc GetUnsettledOutgoingOrders(google.protobuf.Empty) returns (UnsettledOrderModelListMessage);
                                        }