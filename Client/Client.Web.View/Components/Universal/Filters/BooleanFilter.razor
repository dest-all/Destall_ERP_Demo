@using Protocol.Models.Filters
@using MudBlazor;

<MudItem xs="12" md="2">
    <MudBlazor.MudRadioGroup T="bool?" SelectedOption="InnerValue">
        <MudBlazor.MudRadio T="bool?" Option="null">@(OptionLabels.Item1)</MudBlazor.MudRadio>
        <MudBlazor.MudRadio T="bool?" Option="false">@(OptionLabels.Item2)</MudBlazor.MudRadio>
        <MudBlazor.MudRadio T="bool?" Option="true">@(OptionLabels.Item3)</MudBlazor.MudRadio>
    </MudBlazor.MudRadioGroup>
</MudItem>

    @code {
    [Parameter]
    public IBooleanFilterReadOnlyModel Value { get; set; }

    [Parameter]
    public Action<IBooleanFilterReadOnlyModel> OnValueSet { get; set; } = v => { };

    [Parameter]
    public ValueTuple<string, string, string> OptionLabels { get; set; }

    [Parameter]
    public 

    bool? InnerValue
    {
        get
        {
            return Value?.Value;
        }
        set
        {
            Value = InnerValue == null ? null : new BooleanFilterModel
                {
                    Value = value.Value
                };
            if (OnValueSet != null)
            {
                OnValueSet(Value);
            }
        }
    }

}
